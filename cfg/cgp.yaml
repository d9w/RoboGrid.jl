# Used settings
recurrency: 0.6
static_node_size: 100
weights: False
input_start: -1.0
node_inputs: 2
# Evolutionary settings
mutate_method: ":gene_mutate"
crossover_method: ":single_point_crossover"
starting_nodes: 25
node_size_cap: 75
save_best: True
# Unused settings
total_evals: 50000
# Mutation
active_mutate: False
input_mutation_rate: 0.2
output_mutation_rate: 0.3
node_mutation_rate: 0.1
node_size_delta: 0.0
modify_mutation_rate: 0.0
# Oneplus settings
lambda: 3
functions:
  f_sqrt:
    - sqrt.(abs.(x))
  f_squared:
    - x.^2
  f_ypow:
    - abs(x)^abs(y)
    - abs.(x).^abs.(y)
    - abs.(x).^abs.(y)
    - .^(eqsize(abs.(x),abs.(y),c)...)
  f_expx:
    - (exp.(x)-1.0)/(exp(1.0)-1.0)
  f_sinx:
    - sin.(x)
  f_cosx:
    - cos.(x)
  f_sqrtxy:
    - sqrt.(x*x+y*y)/sqrt(2.0)
    - sqrt.(x*x+y.*y)/sqrt(2.0)
    - sqrt.(x.*x+y*y)/sqrt(2.0)
    - sqrt.(.+(eqsize(x.*x, y.*y, c)...))/sqrt(2.0)
  f_sum:
    - scaled(x+y)
    - scaled(x.+y)
    - scaled(x.+y)
    - scaled(.+(eqsize(x,y,c)...))
  f_minus:
    - scaled(x-y)
    - scaled((x.-y))
    - scaled((x.-y))
    - scaled(.-(eqsize(x,y,c)...))
  f_mult:
    - x*y
    - x.*y
    - x.*y
    - ".*(eqsize(x,y,c)...)"
  f_div:
    - scaled(x/y)
    - scaled(x./y)
    - scaled(x./y)
    - "./(eqsize(x,y,c)...)"
  f_gt:
    - Float64(x > y)
    - Float64.(x.>y)
    - Float64.(x.>y)
    - Float64.(.>(eqsize(x,y,c)...))
  f_gte:
    - Float64(x >= y)
    - Float64.(x.>=y)
    - Float64.(x.>=y)
    - Float64.(.>=(eqsize(x,y,c)...))
  f_const:
    - c
  f_min:
    - min(x,y)
    - min.(x,y)
    - min.(x,y)
    - min.(eqsize(x, y, c)...)
  f_max:
    - max(x,y)
    - max.(x,y)
    - max.(x,y)
    - max.(eqsize(x, y, c)...)
  f_round:
    - round.(x)
  f_floor:
    - floor.(x)
